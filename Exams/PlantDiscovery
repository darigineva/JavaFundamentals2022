package FundamentalsFinalExam;

import java.util.*;

public class PlantDiscovery {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        Map<String, double[]> plantsList = new LinkedHashMap();
        Map<String, List<Integer>> ratingMap = new LinkedHashMap();
        int n = Integer.parseInt(scanner.nextLine());

        for (int i = 0; i < n; i++) {
            String[] info = scanner.nextLine().split("<->");
            String name = info[0];
            double rarity = Double.parseDouble(info[1]);
                double[] plantData = {rarity, 0};
                plantsList.put(name, plantData);
        }
        String commands = "";

        while (!(commands = scanner.nextLine()).equals("Exhibition")){
            String plant = commands.split(": ")[1].split(" - ")[0];
            if(!plantsList.containsKey(plant)){
                System.out.println("error");
                continue;
            }
            if(commands.split(": ")[0].equals("Rate")){
            int newRate = Integer.parseInt(commands.split(": ")[1].split(" - ")[1]);
            if(ratingMap.containsKey(plant)){
                ratingMap.get(plant).add(newRate);
            } else {
                List<Integer> rating = new ArrayList<>();
                rating.add(newRate);
                ratingMap.put(plant, rating);
            }
            } else if(commands.split(": ")[0].equals("Update")){
                double newRarity = Double.parseDouble(commands.split(": ")[1].split(" - ")[1]);
                plantsList.get(plant)[0] = newRarity;
            } else if(commands.split(": ")[0].equals("Reset")){
                ratingMap.get(plant).clear();
            }
        }
        for (Map.Entry<String, List<Integer>> entry : ratingMap.entrySet()) {
            double totalRating = 0;
            String plant = entry.getKey();
            if(entry.getValue().size() == 0){
                totalRating = 0;
                continue;
            }
            for (int i = 0; i < entry.getValue().size(); i++) {
            totalRating += entry.getValue().get(i);
            }
            double averageRating = totalRating / entry.getValue().size();
            plantsList.get(plant)[1] = averageRating;
        }

        System.out.println("Plants for the exhibition:");
        for (Map.Entry<String, double[]> entry : plantsList.entrySet()) {
            System.out.printf("- %s; Rarity: %.0f; Rating: %.2f\n", entry.getKey(), entry.getValue()[0], entry.getValue()[1]);
        }
    }
}
