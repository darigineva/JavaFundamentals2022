package FundamentalsFinalExam;

import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;

public class NeedForSpeed {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        Map<String, int[]> listOfCars = new LinkedHashMap<>();

        for (int i = 0; i < n; i++) {
            String[] carInfo = scanner.nextLine().split("\\|");
            String carName = carInfo[0];
            int mileage = Integer.parseInt(carInfo[1]);
            int fuel = Integer.parseInt(carInfo[2]);
            int[] parameters = new int[]{mileage, fuel};
            listOfCars.put(carName, parameters);
        }
        String[] commands = scanner.nextLine().split(" : ");
        while (!commands[0].equals("Stop")){
            String car = commands[1];
            if(commands[0].equals("Drive")){
                int distance = Integer.parseInt(commands[2]);
                int fuel = Integer.parseInt(commands[3]);
                if(listOfCars.get(car)[1] > fuel){
                    listOfCars.get(car)[0] += distance;
                    listOfCars.get(car)[1] -= fuel;
                    System.out.println(car + " driven for " + distance + " kilometers. " + fuel + " liters of fuel consumed.");
                } else {
                    System.out.println("Not enough fuel to make that ride");
                }
                if(listOfCars.get(car)[0] >= 100000){
                    System.out.println("Time to sell the " + car + "!");
                    listOfCars.remove(car);
                }
            } else if(commands[0].equals("Refuel")){
                int fuel = Integer.parseInt(commands[2]);
                listOfCars.get(car)[1] += fuel;
                int rest = 0;
                if(listOfCars.get(car)[1] >= 75){
                    rest = 75 + fuel - listOfCars.get(car)[1];
                    listOfCars.get(car)[1] = 75;
                } else {
                    rest = fuel;
                }
                System.out.println(car + " refueled with " + rest + " liters");
            }else if(commands[0].equals("Revert")){
                int kilometers = Integer.parseInt(commands[2]);
                listOfCars.get(car)[0] -= kilometers;
                if(listOfCars.get(car)[0] < 10000){
                    listOfCars.get(car)[0] = 10000;
                } else {
                    System.out.println(String.format("%s mileage decreased by %d kilometers", car, kilometers));
                }
            }
            commands = scanner.nextLine().split(" : ");
        }


        for (Map.Entry<String, int[]> entry : listOfCars.entrySet()) {
            System.out.printf("%s -> Mileage: %d kms, Fuel in the tank: %d lt.\n", entry.getKey(), entry.getValue()[0], entry.getValue()[1]);
        }

    }
}
